const testExpressions:Array<string> = [
"2+2",
"3.14*2",
"sin(0)",
"cos(pi/2)",
"tan(45)",
"ln(1)",
"arc sin(0.5)",
"arc cos(1)",
"arc tan(1)",
"2^3 + 5",
"3 + 4*2 / (1 - 5)^2",
"((2+3)*5) - 4/2",
"sin(cos(tan(1)))",
"3 + 4 - 5 * 6 / 7",
"3.5 + 2.1",
"2^(3+4)",
"(2+3)*(4+5)",
"sin(arc cos(0.5))",
"ln(2.71828)",
"cos(sin(tan(arc ln(1))))",
// Invalid characters (should be blocked)
"2 + 3a",
"sin[0]",
"cos{pi}",
"tan$45",
"ln#1",
"arc%sin(0)",
"2 + @3",
"hello()",
"eval('2+2')",
"constructor()",
// Missing parentheses
"sin0",
"cos pi",
"tan45",
"ln1",
"arc sin0.5",
"arc cos1",
"arc tan1",
// Wrong decimal placement
"3..14 + 2",
".3 + 2",
"2 + 3.",
"4. + 5",
"3.1.4 + 2",
"sin(3..14)",
"cos(.5.6)",
"tan(7.)",
// Repeated operators or invalid operator positions
"++3",
"3--2",
"*4 + 5",
"6 / / 2",
"7 ** 2",
"8 +* 2",
"9 /- 3",
"+ 3 + 4",
"2 + 3 *",
"5 -",
// Invalid function usage (missing parentheses)
"sin",
"cos",
"tan",
"ln",
"arc",
"arc sin",
"arc cos",
"arc tan",
// Unbalanced parentheses
"(2 + 3",
"4 + 5)",
"((3 + 2)",
"5 + (6 * 7))",
"(sin(0)",
"cos(3))",
"(arc sin(0.5))(",
"ln(2",
// Valid complex expressions
"sin(30) + cos(60) - tan(45)",
"arc sin(0.5) * ln(2)",
"2^3 + 4*(5 + 6) - 7/8",
"((sin(1) + cos(1)) * tan(1)) ^ 2",
"ln(e) + arc cos(1) - arc tan(0)",
// Edge cases
"0",
"1234567890",
"0.0",
"3.1415926535",
"(0)",
"((0))",
"sin((0))",
"ln((1))",
"arc tan((1))",
"cos(arc sin(0))",
// Invalid multiplication/division syntax
"3*+2",
"4/*5",
"*6 + 7",
"8 /",
"/9 + 10",
"11 + * 12",
"13 / * 14",
"15 ** 16",
"17 + (18 *)",
"19 + (/ 20)",
// Misc invalids
"sin(90)) + 5",
"(cos(60) + 3",
"tan((45)",
"ln(1))",
"arc sin(0.5))",
"2 + (3 * 4",
"5 + )6(",
"7 + 8(",
"9 + 10)",
"sin (0)",  // space between function and parentheses (should fail your checker if you replaced with 's(' etc)
];

export {testExpressions};